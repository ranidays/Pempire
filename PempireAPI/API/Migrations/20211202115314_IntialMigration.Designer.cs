// <auto-generated />
using System;
using API.Models.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211202115314_IntialMigration")]
    partial class IntialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("API.Models.Entities.Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Boss")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Health")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hero")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Mana")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StrongAgainst")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WeakAgainst")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isEnemy")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Entity");
                });

            modelBuilder.Entity("API.Models.Entities.GameState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("BossesDefeated")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Lives")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SelectedBossId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SelectedHeroId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SelectedBossId");

                    b.HasIndex("SelectedHeroId");

                    b.HasIndex("UserId");

                    b.ToTable("GameState");
                });

            modelBuilder.Entity("API.Models.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EntityId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EntityId1")
                        .HasColumnType("TEXT");

                    b.Property<int>("Health")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Mana")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.HasIndex("EntityId1");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("API.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ActiveGameStateId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActiveGameStateId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API.Models.Entities.GameState", b =>
                {
                    b.HasOne("API.Models.Entities.Entity", "SelectedBoss")
                        .WithMany()
                        .HasForeignKey("SelectedBossId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Entities.Entity", "SelectedHero")
                        .WithMany()
                        .HasForeignKey("SelectedHeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Entities.User", null)
                        .WithMany("GameStates")
                        .HasForeignKey("UserId");

                    b.Navigation("SelectedBoss");

                    b.Navigation("SelectedHero");
                });

            modelBuilder.Entity("API.Models.Entities.Item", b =>
                {
                    b.HasOne("API.Models.Entities.Entity", null)
                        .WithMany("ActiveItems")
                        .HasForeignKey("EntityId");

                    b.HasOne("API.Models.Entities.Entity", null)
                        .WithMany("Inventory")
                        .HasForeignKey("EntityId1");
                });

            modelBuilder.Entity("API.Models.Entities.User", b =>
                {
                    b.HasOne("API.Models.Entities.GameState", "ActiveGameState")
                        .WithMany()
                        .HasForeignKey("ActiveGameStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActiveGameState");
                });

            modelBuilder.Entity("API.Models.Entities.Entity", b =>
                {
                    b.Navigation("ActiveItems");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("API.Models.Entities.User", b =>
                {
                    b.Navigation("GameStates");
                });
#pragma warning restore 612, 618
        }
    }
}
